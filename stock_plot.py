####1 learn mplfinance repository##### import pandas as pd# import mplfinance as mpf# stock=pd.read_csv('GC=F.csv',index_col=0,parse_dates=True)# n_stock=stock.dropna()# n2_stock=n_stock.drop('Volume',axis=1)# #### stock1=pd.read_csv('GC=F.csv',index_col=0,parse_dates=False)##### #### stock2=pd.read_csv('GC=F.csv')##### n2_stock.index.name='date'# '''plotting OHLC data is as simple as calling mpf.plot() on the dataframe'''# mpf.plot(stock)# #### type='candle', type='line', type='renko', or type='pnf'##### mpf.plot(stock, type='candle')# #### plot moving averages with the mav keyword##### #### mav = scalar/tuple/list of integers# mpf.plot(stock, type='candle',mav=(3,6,9))# mpf.plot(n_stock, type='candle',mav=5,volume=True)# mpf.plot(stock, type='candle',mav=(3,6,9),volume=True,show_nontrading=True)# special_day_stock=n2_stock.loc['2020-01-02':'2020-03-02',:]# mpf.plot(special_day_stock,type='renko',mav=3)####2 easiest plot stock   #process stock data from csv# import pandas as pd# import matplotlib.pyplot as plt# plt.style.use('ggplot')# stock='nasdaq.csv'# price=pd.read_csv(stock,parse_dates=True,index_col=0)# ohlc_price=price[['Open','High','Low','Close']]# ohlc_price.plot()####3 easiest way to plot stock seperately   #process stock data from web# import datetime as dt# import pandas_datareader.data as pdrd# import matplotlib.pyplot as plt# import numpy as np# plt.style.use('ggplot')#    # extract data from web stock market# sticker='GOOGL'# start = dt.datetime(2020,1,1)# end = dt.datetime.today()#    #'yahoo' call yahoodailyreader# data = pdrd.DataReader(sticker,'yahoo',start,end)#    #plot data# plt.figure(1)# data['Open'].plot()# data['High'].plot()# data['Low'].plot()# data['Close'].plot()# plt.legend()#### '''example 1'''# import plotly.graph_objs as go# import pandas as pd# import datetime as dt# import matplotlib.pyplot as plt# df = pd.read_csv('dow30.csv')# fig = go.Figure(data=[go.Candlestick(x=df['Date'],#                                      open=df['Open'],#                                      high=df['High'],#                                      low=df['Low'],#                                      close=df['Close'],#                                      increasing_line_color='green',#                                      decreasing_line_color='red'#                                      )])# fig.show()#### '''example 2'''# import plotly.express as px# import pandas as pd# df = pd.read_csv('/Users/jq/PycharmProjects/candlestick1/venv/dow30.csv')# fig1 = px.bar(df,df['Date'],df['Open'],df['Close'])# fig1.show()